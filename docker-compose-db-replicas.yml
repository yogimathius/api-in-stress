version: "3.7"

services:
  postgres: &postgres
    image: postgres:latest
    restart: always
    depends_on:
      - db_part1
      - db_part2
    user: postgres
    environment:
      - PG_DB=warriors
      - POSTGRES_DB=warriors
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass123
      - PGUSER=postgres
      - PG_PASSWORD=pass123
      - PGDATA=/var/lib/postgresql/data/some_name/
    ports:
      - 5432
    volumes:
      - "db_primary:/var/lib/postgresql/data:delegated"
      - "./sql/db_primary.sql:/docker-entrypoint-initdb.d/setup.sql:cached"
    networks:
      - mynetwork
    command: postgres -c listen_addresses='*' -c 'max_connections=1000'
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5

  db_part1:
    <<: *postgres
    depends_on: []
    volumes:
      - "db_part1:/var/lib/postgresql/data:delegated"
      - "./sql/db_part1.sql:/docker-entrypoint-initdb.d/setup.sql:cached"
    networks:
      - mynetwork

  db_part2:
    <<: *postgres
    depends_on: []
    volumes:
      - "db_part2:/var/lib/postgresql/data:delegated"
      - "./sql/db_part2.sql:/docker-entrypoint-initdb.d/setup.sql:cached"
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  db_primary:
  db_part1:
  db_part2:
  db_part3:
