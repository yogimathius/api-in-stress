worker_processes 11;
worker_rlimit_nofile 1000000;
error_log /var/log/nginx/error.log crit;

events {
    worker_connections 10240;
    use epoll;
    multi_accept on;
}

http {
    access_log off;
    # sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    client_body_buffer_size 80k;

    client_max_body_size 9m;

    client_header_buffer_size 1k;
    gzip on;
    # gzip_static on;
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 20;

    # if client stop responding, free up memory -- default 60
    send_timeout 2;
    keepalive_timeout 30;
    keepalive_requests 100000;


    upstream api_gateway {
        least_conn;
        server api-gateway-1:3000;
        server api-gateway-2:3000;
        # Add more servers as needed
    }

    proxy_cache_path /var/cache/nginx keys_zone=mycache:10m;
    server {
        proxy_cache mycache;

        listen 4000;

        location / {
            proxy_cache_min_uses 1;
            proxy_cache_valid any 1m;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
