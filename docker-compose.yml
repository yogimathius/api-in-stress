version: "3"

services:
  api-gateway:
    build: .
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.75"
          memory: "1536M"
    volumes:
      - ./api_server:/usr/src/app
    environment:
      DATABASE_URL: postgres://postgres:pass123@postgres:5432/diesel_demo
    ports:
      - "3000"
    networks:
      - mynetwork
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "6500:5432"
    user: postgres
    environment:
      - PG_DB=diesel_demo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pass123
      - PGUSER=postgres
      - PG_PASSWORD=pass123
      - PGDATA=/var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    networks:
      - mynetwork
    command: postgres -c listen_addresses='*'

  pgAdmin:
    image: dpage/pgadmin4
    container_name: pgAdmin
    env_file:
      - ./.env
    ports:
      - "5050:80"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "4000:4000"
    networks:
      - mynetwork
    depends_on:
      postgres:
        condition: service_healthy

networks:
  mynetwork:

volumes:
  progresDB:
  pgdata: {}
